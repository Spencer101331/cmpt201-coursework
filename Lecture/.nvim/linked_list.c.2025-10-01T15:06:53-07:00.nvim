#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>

struct Node {
  int data;
  struct Node *next;
};

// Create a new node with the given data
struct Node *createNode(int data) {
  struct Node *newNode = malloc(sizeof(*newNode));
  newNode->data = data;
  newNode->next = NULL;
  return newNode;
}

// Insert a new node at the end of list
void append(struct Node **head, int data) {
  if (head == NULL) {
    *head = createNode(data);
  } else {
    struct Node *temp = *head;
    while (temp->next != NULL) {
      temp = temp->next;
    }
    temp->next = createNode(data);
  }
}

void traverse(struct Node **head) {
  if (*head == NULL) {
    printf("\n");
    return;
  }
  struct Node *current = *head;
  while (current != NULL) {
    printf("%d ", current->data);
    current = current->next;
  }
  printf("\n");
}

int main() {
  struct Node *head = NULL;

  // Append elements to the list
  append(&head, 1);
  append(&head, 2);
  append(&head, 3);

  // Traverse and print the list
  printf("Linked List: ");
  traverse(&head);

  // Remember: free memory when done
  struct Node *current = head;
  while (current != NULL) {
    struct Node *temp = current;
    current = current->next;
    free(temp);
  }
  head = NULL;

  return 0;
}
